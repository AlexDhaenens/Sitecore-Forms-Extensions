@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Feature.FormsExtensions
@using Feature.FormsExtensions.Views
@using Sitecore.ExperienceForms.Mvc.Html
@using Sitecore.Mvc
@model Feature.FormsExtensions.Fields.ReCaptcha.ReCaptchaModel
@{
  var fieldId = Html.IdFor(m => Model.CaptchaValue);
  Html.AddScript(ScriptStore.ValidateScriptKey, new MvcHtmlString("<script src=\"/sitecore%20modules/Web/ExperienceForms/scripts/formsextensions.validate.js\"></script>"));
}
@if (Html.Sitecore().IsExperienceFormsEditMode())
{
  <script type="text/javascript">
    var reCaptchaArray = [];
    var recaptchasRendered = false;
    var loadReCaptchas = function () {
      if (recaptchasRendered) {
        return;
      }
      recaptchasRendered = true;
      for (var i = 0; i < reCaptchaArray.length; i++) {
        reCaptchaArray[i]();
      }
    };
  </script>
}
<div id="@(fieldId)_wrapper"></div>
<input id="@fieldId" name="@Html.NameFor(m => Model.CaptchaValue)" type="hidden" class="fxt-captcha" @Html.GenerateUnobtrusiveValidationAttributes(m => m.CaptchaValue)/>
@Html.ValidationMessageFor(m => Model.CaptchaValue)

<script type="text/javascript">
  var reCaptchaArray = reCaptchaArray || [];
  reCaptchaArray.push(
    function() {
      var _captchaInput = window.document.getElementById('@fieldId');
      window.grecaptcha.render('@(fieldId)_wrapper',
        {
          'sitekey': '@Model.CaptchaPublicKey',
          'callback': function(token) {
            _captchaInput.value = token;
          },
          'expired-callback': function(args) {
            _captchaInput.value = '';
          }
        });
    }
  );
</script>
<script src="https://www.google.com/recaptcha/api.js?onload=loadReCaptchas&render=explicit&hl=@Sitecore.Context.Language.CultureInfo.TwoLetterISOLanguageName" async defer></script>